plugins {
	id "java"
	id "idea"
	id "org.sonarqube" version "4.0.0.2929"
	id "io.freefair.lombok" version "8.12.1"
	id 'io.freefair.aspectj.post-compile-weaving' version '8.12.1'
	id "jacoco"
	id "jacoco-report-aggregation"
	id "com.diffplug.spotless" version "7.0.2"
	id "nebula.lint" version "19.0.1"
}

defaultTasks 'clean', 'spotlessApply', 'build'

repositories {
	maven {
		url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
	}
}

ext {
	aws_powertools_version = "1.18.0"
	dependencyVersions = [

		cri_common_lib_version             : "4.0.0",

		// AWS SDK
		aws_sdk_version                    : "2.30.13",
		aws_lambda_events_version          : "3.11.6",

		// Nimbus Oauth
		nimbusds_oauth_version             : "11.19.1",

		// CRI_LIB powertools
		aws_powertools_logging_version     : "${aws_powertools_version}",
		aws_powertools_metrics_version     : "${aws_powertools_version}",
		aws_powertools_parameters_version  : "${aws_powertools_version}",

		// ---------------------------------------------------------
		// DL CRI Dependencies
		// ---------------------------------------------------------

		// AWS  aws-lambda-java-libs see https://github.com/aws/aws-lambda-java-libs
		aws_lambda_core_version            : "1.2.1",
		// Jackson Addons/ needs to track the aws sdk version of jackson
		jackson_version                    : "2.15.2",

		// GSON used in DCS/DVA pathway remove with DCS removal rework to jackson
		gson_version                       : "2.8.9",

		// Code weaving (powertools+lombok)
		aspectjrt_version                  : "1.9.22.1",

		// Open telemetry
		opentelemetry_bom_alpha_version    : "2.12.0-alpha",

		// CRI Apache HTTP Client see https://hc.apache.org/httpcomponents-client-4.5.x/current/httpclient/dependencies.html
		httpcomponents_core_version        : "4.4.16",
		httpcomponents_client_version      : "4.5.14",

		// password renewal lambda
		passay_version                     : "1.6.4",

		bouncycastle_bcpkix_version        : "1.80",

		// Test
		junit_version                      : "5.11.4",
		hamcrest_version                   : "2.2",
		mockito_version                    : "5.15.2",
		webcompere_version                 : "2.1.6",

		// testFixturesImplementation

		// Contract Tests
		pact_provider_version              : "4.6.17",
		slf4j_log4j12_version              : "2.0.13", // For contract test debug
	]

	// Sets the version used on the lambda + lib (ac tests have separate dependencies)
	javaCompatibility = [
		source : JavaVersion.VERSION_17,
		target : JavaVersion.VERSION_17
	]

	// Code Coverage (Lines/Branches) cannot be below this value on a per sub project basis
	// Requires review coverage is higher than this
	minUnitTestLineCoverage = 0.80
	minUnitTestBranchCoverage = 0.80
}

sonar {
	properties {
		property "sonar.projectKey", "ipv-cri-dl-api"
		property "sonar.organization", "govuk-one-login"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.coverage.jacoco.xmlReportPath", layout.buildDirectory.file("reports/jacoco/reports/reports.xml")
	}
}

// This generates an aggregate test report at "${buildDir}/reports/jacoco/reports/reports.xml"
reporting {
	reports {
		reports(JacocoCoverageReport) {
			testSuiteName = "test"
		}
	}
}

dependencies {
	jacocoAggregation project(':lib'),
			project(':lib-dva'),
			project(':lib-dvla'),
			project("lambdas:drivingpermitcheck"),
			project("lambdas:issuecredential"),
			project("lambdas:certexpiryreminder"),
			project("lambdas:passwordRenewal"),
			project("lambdas:personInfo")
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.13.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
		sourceCompatibility = "${javaCompatibility.source}"
		targetCompatibility = "${javaCompatibility.target}"
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

subprojects {
	apply plugin: 'org.sonarqube'
	apply plugin: 'io.freefair.lombok'
	apply plugin: 'io.freefair.aspectj.post-compile-weaving'
	apply plugin: "nebula.lint"

	//gradleLint {
	//	rules=['unused-dependency']
	//}

	repositories {
		maven {
			url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
		}
		//flatDir {
		//	dirs '<Location of your projects absolute path>/di-ipv-cri-lib/build/libs'
		//}
	}

	plugins.withId('java') {
		sourceCompatibility = "${javaCompatibility.source}"
		targetCompatibility = "${javaCompatibility.target}"
	}

	plugins.withId('java-library') {
		sourceCompatibility = "${javaCompatibility.source}"
		targetCompatibility = "${javaCompatibility.target}"
	}

	tasks.withType(JavaCompile).configureEach {
		options.compilerArgs << "-Xlint" << "-Xlint:-processing"
	}

	task allDeps(type: DependencyReportTask) {}
}

clean.doFirst {
	delete "${rootDir}/dist/"
	delete "${rootDir}/.aws-sam"
}
